//Функции

//function declaration - инструкция объявления фукции -
// стандартная фукнция как вверху - объявление создает функцию и записывает 
//на нее ссылку в переменную с именем фукнции
//Основная разница - имеет хостинг - сначала может быть вызов функции, а функция м.б. описана потом

function func (a,b){ //параметры - когда описываем
	return a + b;
};

func( 3,4 ); //аргументы - когда передаем

//function expression - литерал фукнции - классическая функция - передаем анонимную фукнцию
var funcExp = function(a,b){
	return a + b;
};

funcExp(5,5);
//пустые аргументы - undefined

//фукнции обратного вызова - callback - когда нам нужно вызвать фукнцию после события, ответа
var func = function(callback){
	var name = "Nick";
	return callback(name);
};

func(function(n){
	return "Hello " + n;
});


//возвращение функции
var func1 = function(){
	return function(){
		console.log("Привет")
	};
};

func1(); //вернет тело функции
func1()(); //вернет то, что исполняет функция


//анонимная самовызывающаяся функция - изолирование функции от глобальной видимости
;(function(){
	console.log('анонимная самовызывающаяся функция');
})();

//массив аргументов - т.е. в фукнцию мы не передаем определенное количество аргументов
//а можем передавать в фукцию целые массивы
var  funcArg = function(){
	var i,
		sum = 0;
		for (i = 0; i < arguments.length; i++){
			sum += arguments[i];
		};
		return sum;
};

funcArg(10, 20, 30, 40, 447, 888);



